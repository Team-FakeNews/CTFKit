{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home Quickstart Goals CTF Kit is a cli tools which allows you to deploy CTF easily. Deploment is currently based on kubernetes, but more architecture will be added in the future. Features Create a challenge from a template Create a CTF from a template Automate CTF deployment Wireguard configuration generation Patch challenges in the flight Local test of challenge CI/CD automated configuration Team provisioning from API (CTFd, ...) Support of network discovery challenges Getting Started See installation Configuration files See configuration files","title":"Home"},{"location":"#home","text":"Quickstart","title":"Home"},{"location":"#goals","text":"CTF Kit is a cli tools which allows you to deploy CTF easily. Deploment is currently based on kubernetes, but more architecture will be added in the future.","title":"Goals"},{"location":"#features","text":"Create a challenge from a template Create a CTF from a template Automate CTF deployment Wireguard configuration generation Patch challenges in the flight Local test of challenge CI/CD automated configuration Team provisioning from API (CTFd, ...) Support of network discovery challenges","title":"Features"},{"location":"#getting-started","text":"See installation","title":"Getting Started"},{"location":"#configuration-files","text":"See configuration files","title":"Configuration files"},{"location":"contributing/","text":"Contributing","title":"Contributing"},{"location":"contributing/#contributing","text":"","title":"Contributing"},{"location":"installation/","text":"Installation Requirements Python >= 3.8 NodeJS >= LTS Terraform gcloud CLI Info NodeJS, Terraform and GCloud are only required for infrastructure features. If you do not intend to use deployment features, you can skip them. Download While CTFKit is in beta, no package will be distributed on pip. You need to clone from sources and install the package yourself. You can get the latest version from the official repository : git clone https://git.fakenews.sh/ctfkit/ctfkit.git Installation Once the repository is cloned you can install the package globaly with : pip install . Checks If the package has correctly been installed, you should be able to run directly : > ctfkit Usage: ctfkit [OPTIONS] COMMAND [ARGS]... Main cli which contains all sub-commands It doesn't do anything but showing help to the user Options: --help Show this message and exit. Commands: challenge ctf Root group for the ctf command If your terminal cannot find any executable matching ctfkit , maybe your pip installation folder has not been added to PATH. In this case, you can always run ctfkit using python3 -m ctfkit . You can refer to the official python documentation for adding pip packages to your PATH. GCloud configuration If your aim is to deploy a CTF to gcloud, you need a proper installation of.","title":"Installation"},{"location":"installation/#installation","text":"","title":"Installation"},{"location":"installation/#requirements","text":"Python >= 3.8 NodeJS >= LTS Terraform gcloud CLI Info NodeJS, Terraform and GCloud are only required for infrastructure features. If you do not intend to use deployment features, you can skip them.","title":"Requirements"},{"location":"installation/#download","text":"While CTFKit is in beta, no package will be distributed on pip. You need to clone from sources and install the package yourself. You can get the latest version from the official repository : git clone https://git.fakenews.sh/ctfkit/ctfkit.git","title":"Download"},{"location":"installation/#installation_1","text":"Once the repository is cloned you can install the package globaly with : pip install .","title":"Installation"},{"location":"installation/#checks","text":"If the package has correctly been installed, you should be able to run directly : > ctfkit Usage: ctfkit [OPTIONS] COMMAND [ARGS]... Main cli which contains all sub-commands It doesn't do anything but showing help to the user Options: --help Show this message and exit. Commands: challenge ctf Root group for the ctf command If your terminal cannot find any executable matching ctfkit , maybe your pip installation folder has not been added to PATH. In this case, you can always run ctfkit using python3 -m ctfkit . You can refer to the official python documentation for adding pip packages to your PATH.","title":"Checks"},{"location":"installation/#gcloud-configuration","text":"If your aim is to deploy a CTF to gcloud, you need a proper installation of.","title":"GCloud configuration"},{"location":"configuration-files/challenge/","text":"Challenge config Note Config files can be either YAML ( challenge.yml ) or JSON ( challenge.json ). A challenge config file must follow the shown syntax: name: my-challenge description: <<-EOF This is my super description EOF points: 10 category: pwn author: Me! files: - chall.jpg containers: - image: nginx:latest ports: - proto: TCP port: 80 - proto: UDP port: 31337 name The name of the challenge. description The description of the challenge, can be multiline. points The points awarded once the challenge has been solved. category The category of the challenge. author The challenge's author. files (optionnal) A list of the paths of the attached files for the challenge. containers The containers' configuration for the challenge. image The Docker image to use for the challenge. Must be accessible from your provider. ports A list of the ports to expose for the challenge. proto The protocol to serve of that port, must be one of: TCP UDP port The number of the port to open on the container.","title":"Challenge config"},{"location":"configuration-files/challenge/#challenge-config","text":"Note Config files can be either YAML ( challenge.yml ) or JSON ( challenge.json ). A challenge config file must follow the shown syntax: name: my-challenge description: <<-EOF This is my super description EOF points: 10 category: pwn author: Me! files: - chall.jpg containers: - image: nginx:latest ports: - proto: TCP port: 80 - proto: UDP port: 31337","title":"Challenge config"},{"location":"configuration-files/challenge/#name","text":"The name of the challenge.","title":"name"},{"location":"configuration-files/challenge/#description","text":"The description of the challenge, can be multiline.","title":"description"},{"location":"configuration-files/challenge/#points","text":"The points awarded once the challenge has been solved.","title":"points"},{"location":"configuration-files/challenge/#category","text":"The category of the challenge.","title":"category"},{"location":"configuration-files/challenge/#author","text":"The challenge's author.","title":"author"},{"location":"configuration-files/challenge/#files-optionnal","text":"A list of the paths of the attached files for the challenge.","title":"files (optionnal)"},{"location":"configuration-files/challenge/#containers","text":"The containers' configuration for the challenge.","title":"containers"},{"location":"configuration-files/challenge/#image","text":"The Docker image to use for the challenge. Must be accessible from your provider.","title":"image"},{"location":"configuration-files/challenge/#ports","text":"A list of the ports to expose for the challenge.","title":"ports"},{"location":"configuration-files/challenge/#proto","text":"The protocol to serve of that port, must be one of: TCP UDP","title":"proto"},{"location":"configuration-files/challenge/#port","text":"The number of the port to open on the container.","title":"port"},{"location":"configuration-files/ctf/","text":"CTF config Note Config files can be either YAML ( ctf.yml ) or JSON ( ctf.json ). A CTF config file must follow the shown syntax: kind: ctf name: fake-ctf teams_file: null challenges: [] deployments: internal_domain: fake.ctf environment: testing provider: gcp gcp: node_count: 1 region: europe-west1 machine_type: e1-standard-2 project: change-this-123 zone: europe-west1-b azure: null kind The type of the config, either ctf or challenge . name The name of the CTF. teams_file The path of the teams file for the CTF. challenges A list of the paths of the challenges to be deployed with the CTF: challenges: - ./challenges/my-challenge - ./challenges/other-challenge deployments The main part of a CTF config. internal_domain The root domain name to deploy the challenges on. environment The CTF environment, one of: testing production provider The provider to use, must be one of: gcp azure (not implemented yet) local (not implemented yet) Note If you are using one provider, you must mark as null the others following attributes, of course CTFKit will do it automatically. gcp (optionnal) The configuration of GCP. node_count The number of nodes to deploy. region The region of the CTF, ex. europe-west1 . machine_type The type of the machine, ex. e1-standard-2 . project The GCP project's ID. zone The zone of the node(s), ex. europe-west1-b . azure (optionnal) (not implemented yet) The configuration of Azure.","title":"CTF config"},{"location":"configuration-files/ctf/#ctf-config","text":"Note Config files can be either YAML ( ctf.yml ) or JSON ( ctf.json ). A CTF config file must follow the shown syntax: kind: ctf name: fake-ctf teams_file: null challenges: [] deployments: internal_domain: fake.ctf environment: testing provider: gcp gcp: node_count: 1 region: europe-west1 machine_type: e1-standard-2 project: change-this-123 zone: europe-west1-b azure: null","title":"CTF config"},{"location":"configuration-files/ctf/#kind","text":"The type of the config, either ctf or challenge .","title":"kind"},{"location":"configuration-files/ctf/#name","text":"The name of the CTF.","title":"name"},{"location":"configuration-files/ctf/#teams_file","text":"The path of the teams file for the CTF.","title":"teams_file"},{"location":"configuration-files/ctf/#challenges","text":"A list of the paths of the challenges to be deployed with the CTF: challenges: - ./challenges/my-challenge - ./challenges/other-challenge","title":"challenges"},{"location":"configuration-files/ctf/#deployments","text":"The main part of a CTF config.","title":"deployments"},{"location":"configuration-files/ctf/#internal_domain","text":"The root domain name to deploy the challenges on.","title":"internal_domain"},{"location":"configuration-files/ctf/#environment","text":"The CTF environment, one of: testing production","title":"environment"},{"location":"configuration-files/ctf/#provider","text":"The provider to use, must be one of: gcp azure (not implemented yet) local (not implemented yet) Note If you are using one provider, you must mark as null the others following attributes, of course CTFKit will do it automatically.","title":"provider"},{"location":"configuration-files/ctf/#gcp-optionnal","text":"The configuration of GCP.","title":"gcp (optionnal)"},{"location":"configuration-files/ctf/#node_count","text":"The number of nodes to deploy.","title":"node_count"},{"location":"configuration-files/ctf/#region","text":"The region of the CTF, ex. europe-west1 .","title":"region"},{"location":"configuration-files/ctf/#machine_type","text":"The type of the machine, ex. e1-standard-2 .","title":"machine_type"},{"location":"configuration-files/ctf/#project","text":"The GCP project's ID.","title":"project"},{"location":"configuration-files/ctf/#zone","text":"The zone of the node(s), ex. europe-west1-b .","title":"zone"},{"location":"configuration-files/ctf/#azure-optionnal-not-implemented-yet","text":"The configuration of Azure.","title":"azure (optionnal) (not implemented yet)"},{"location":"user%20guide/challenge/","text":"Challenge challenge Generate and test your challenge Usage: challenge [OPTIONS] COMMAND [ARGS]... Options: --help Show this message and exit. challenge add : Import a challenge with its URL (must be a GIT repo) :param challenge_url: The URL of the challenge to import :type challenge_url: str Usage: challenge add [OPTIONS] CHALLENGE_URL Options: --help Show this message and exit. challenge new : Creates a CTF Kit challenge repo for a new challenge :param challenge_name: The name of the challenge to create :type challenge_name: str Usage: challenge new [OPTIONS] CHALLENGE_NAME Options: --help Show this message and exit. challenge run Run a challenge inside a Docker container. For the moment this method doesn't add any specific parameters to the container (such as port) but it will when a challenge object will be available. First a Docker image is built using the Dockerfile located in the challenge's directory and then we run a Docker container with the built image. :param challenge: The name of the challenge to run Usage: challenge run [OPTIONS] CHALLENGE Options: --help Show this message and exit. challenge stop Stop a challenge running inside a Docker container. First we stop the container using his name, then we delete the related Docker image. :param challenge: The name of the running challenge. Usage: challenge stop [OPTIONS] CHALLENGE Options: --help Show this message and exit.","title":"Challenge"},{"location":"user%20guide/challenge/#challenge_1","text":"","title":"Challenge"},{"location":"user%20guide/challenge/#challenge","text":"Generate and test your challenge Usage: challenge [OPTIONS] COMMAND [ARGS]... Options: --help Show this message and exit.","title":"challenge"},{"location":"user%20guide/challenge/#challenge-add","text":": Import a challenge with its URL (must be a GIT repo) :param challenge_url: The URL of the challenge to import :type challenge_url: str Usage: challenge add [OPTIONS] CHALLENGE_URL Options: --help Show this message and exit.","title":"add"},{"location":"user%20guide/challenge/#challenge-new","text":": Creates a CTF Kit challenge repo for a new challenge :param challenge_name: The name of the challenge to create :type challenge_name: str Usage: challenge new [OPTIONS] CHALLENGE_NAME Options: --help Show this message and exit.","title":"new"},{"location":"user%20guide/challenge/#challenge-run","text":"Run a challenge inside a Docker container. For the moment this method doesn't add any specific parameters to the container (such as port) but it will when a challenge object will be available. First a Docker image is built using the Dockerfile located in the challenge's directory and then we run a Docker container with the built image. :param challenge: The name of the challenge to run Usage: challenge run [OPTIONS] CHALLENGE Options: --help Show this message and exit.","title":"run"},{"location":"user%20guide/challenge/#challenge-stop","text":"Stop a challenge running inside a Docker container. First we stop the container using his name, then we delete the related Docker image. :param challenge: The name of the running challenge. Usage: challenge stop [OPTIONS] CHALLENGE Options: --help Show this message and exit.","title":"stop"},{"location":"user%20guide/ctf/","text":"CTF ctfkit ctf (init|plan|deploy|destroy) ctf Manage your CTF infrastructure Usage: ctf [OPTIONS] COMMAND [ARGS]... Options: --help Show this message and exit. ctf deploy Generate terraform configuration files from the ctf configuration and deploy required changes Usage: ctf deploy [OPTIONS] {testing|production} Options: --config TEXT --help Show this message and exit. ctf destroy Generate terraform configuration files from the ctf configuration and deploy required changes Usage: ctf destroy [OPTIONS] {testing|production} Options: --config TEXT --help Show this message and exit. ctf init Create a CTF repository in the current working directory :param ctf_name: The name of the CTF :param provider: The provider which will host the CTF Usage: ctf init [OPTIONS] Options: -n, --ctf-name TEXT -p, --provider [gcp|azure] --help Show this message and exit. ctf plan List planned infrastructure modifications Generate terraform configuration and list planned addition, deletion and modification Usage: ctf plan [OPTIONS] {testing|production} Options: --config TEXT --help Show this message and exit.","title":"CTF"},{"location":"user%20guide/ctf/#ctf_1","text":"ctfkit ctf (init|plan|deploy|destroy)","title":"CTF"},{"location":"user%20guide/ctf/#ctf","text":"Manage your CTF infrastructure Usage: ctf [OPTIONS] COMMAND [ARGS]... Options: --help Show this message and exit.","title":"ctf"},{"location":"user%20guide/ctf/#ctf-deploy","text":"Generate terraform configuration files from the ctf configuration and deploy required changes Usage: ctf deploy [OPTIONS] {testing|production} Options: --config TEXT --help Show this message and exit.","title":"deploy"},{"location":"user%20guide/ctf/#ctf-destroy","text":"Generate terraform configuration files from the ctf configuration and deploy required changes Usage: ctf destroy [OPTIONS] {testing|production} Options: --config TEXT --help Show this message and exit.","title":"destroy"},{"location":"user%20guide/ctf/#ctf-init","text":"Create a CTF repository in the current working directory :param ctf_name: The name of the CTF :param provider: The provider which will host the CTF Usage: ctf init [OPTIONS] Options: -n, --ctf-name TEXT -p, --provider [gcp|azure] --help Show this message and exit.","title":"init"},{"location":"user%20guide/ctf/#ctf-plan","text":"List planned infrastructure modifications Generate terraform configuration and list planned addition, deletion and modification Usage: ctf plan [OPTIONS] {testing|production} Options: --config TEXT --help Show this message and exit.","title":"plan"}]}