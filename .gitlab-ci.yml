# You can override the included template(s) by including variable overrides
# See https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#priority-of-environment-variables
include:
    - template: Dependency-Scanning.gitlab-ci.yml
    - template: Security/SAST.gitlab-ci.yml
    - template: Security/License-Scanning.gitlab-ci.yml

variables:
    PIP_CACHE_DIR: $CI_PROJECT_DIR/.pipenv/pipcache
    WORKON_HOME: $CI_PROJECT_DIR/.pipenv/venvs

cache:
    paths:
      - .pipenv

sast:
    variables:
        SAST_DEFAULT_ANALYZERS: bandit
    stage: test


# install_dependencies:
#     stage: .pre
#     image: python:3.9-alpine
#     before_script:
#         - apk add musl-dev gcc
#         - pip install pipenv
#     script:
#         - pipenv sync

typecheck:
    stage: test
    image: python:3.9-alpine
    before_script:
        - apk add musl-dev gcc nodejs git
        - pip3 install pipenv
        - pipenv install --dev
    script:
        - pipenv run mypy ctfkit


unittest:
    stage: test
    image: python:3.9-alpine
    before_script:
        - apk add musl-dev gcc nodejs git terraform
        - pip3 install pipenv
        - pipenv install --dev
    script:
        - |
            pipenv run python3 -m coverage run -m unittest discover tests -b; pipenv run python3 -m coverage xml
    artifacts:
        reports:
            cobertura: coverage.xml


pylint:
    stage: test
    allow_failure: true
    image: python:3.9-alpine
    before_script:
        - apk add musl-dev gcc
        - pip3 install pipenv
        - pipenv install --dev
    script:
        - pipenv run python3 -m pylint --exit-zero --output-format=pylint_gitlab.GitlabCodeClimateReporter ctfkit > codeclimate.json
    artifacts:
        reports:
            codequality: codeclimate.json
        when: always
